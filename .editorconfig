# EditorConfig is awesome: https://EditorConfig.org

# top-most EditorConfig file
root = true

[*.cs]
indent_style = space
indent_size = 4
end_of_line = crlf
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = false


#### .NET コーディング規則 ####

# using の整理
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true
file_header_template = unset

# this. と Me. の設定
dotnet_style_qualification_for_event = false:silent
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_property = false:silent

# 言語キーワードと BCL の種類の設定
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent

# かっこの設定
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:suggestion

# 修飾子設定
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

# 式レベルの設定
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = true:warning
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion

# フィールド設定
dotnet_style_readonly_field = true:warning

# パラメーターの設定
dotnet_code_quality_unused_parameters = all:suggestion

# 抑制の設定
dotnet_remove_unnecessary_suppression_exclusions = none

#### C# コーディング規則 ####

# new 式を簡略化する
csharp_style_implicit_object_creation_when_type_is_apparent = true:warning

# var を優先
csharp_style_var_elsewhere = false:silent
csharp_style_var_for_built_in_types = false:silent
csharp_style_var_when_type_is_apparent = false:silent

# パターン マッチング設定
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_pattern_matching = true:suggestion
csharp_style_prefer_switch_expression = true:suggestion

# Null チェック設定
csharp_style_conditional_delegate_call = true:suggestion

# 修飾子設定
csharp_prefer_static_local_function = true:suggestion
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:silent

# コード ブロックの設定
csharp_prefer_braces = false:suggestion
csharp_prefer_simple_using_statement = true:suggestion

# 式レベルの設定
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_throw_expression = true:suggestion

# 'using' ディレクティブの基本設定
csharp_using_directive_placement = outside_namespace:suggestion

#### 命名スタイル ####

dotnet_naming_rule.interface_should_be_begins_with_i.severity = warning
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = warning
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.method_should_be_pascal_case.severity = warning
dotnet_naming_rule.method_should_be_pascal_case.symbols = method
dotnet_naming_rule.method_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_or_internal_field_should_be_underscore_and_camel_case.severity = warning
dotnet_naming_rule.private_or_internal_field_should_be_underscore_and_camel_case.symbols = private_or_internal_field
dotnet_naming_rule.private_or_internal_field_should_be_underscore_and_camel_case.style = underscore_and_camel_case

dotnet_naming_rule.static_private_or_internal_field_should_be_s_and_underscore_and_camel_case.severity = warning
dotnet_naming_rule.static_private_or_internal_field_should_be_s_and_underscore_and_camel_case.symbols = static_private_or_internal_field
dotnet_naming_rule.static_private_or_internal_field_should_be_s_and_underscore_and_camel_case.style = s_and_underscore_and_camel_case

dotnet_naming_rule.public_or_protected_field_should_be_pascal_case.severity = warning
dotnet_naming_rule.public_or_protected_field_should_be_pascal_case.symbols = public_or_protected_field
dotnet_naming_rule.public_or_protected_field_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.class_should_be_pascal_case.severity = warning
dotnet_naming_rule.class_should_be_pascal_case.symbols = class
dotnet_naming_rule.class_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.static_field_should_be_all_upper.severity = warning
dotnet_naming_rule.static_field_should_be_all_upper.symbols = static_field
dotnet_naming_rule.static_field_should_be_all_upper.style = pascal_case

dotnet_naming_rule.namespace_should_be_pascal_case.severity = warning
dotnet_naming_rule.namespace_should_be_pascal_case.symbols = namespace
dotnet_naming_rule.namespace_should_be_pascal_case.style = pascal_case

# 記号の仕様

dotnet_naming_symbols.class.applicable_kinds = class
dotnet_naming_symbols.class.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.class.required_modifiers = 

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.method.applicable_kinds = method
dotnet_naming_symbols.method.applicable_accessibilities = public
dotnet_naming_symbols.method.required_modifiers = 

dotnet_naming_symbols.public_or_protected_field.applicable_kinds = field
dotnet_naming_symbols.public_or_protected_field.applicable_accessibilities = public, protected
dotnet_naming_symbols.public_or_protected_field.required_modifiers = 

dotnet_naming_symbols.static_field.applicable_kinds = field
dotnet_naming_symbols.static_field.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.static_field.required_modifiers = static

dotnet_naming_symbols.private_or_internal_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_field.required_modifiers = 

dotnet_naming_symbols.static_private_or_internal_field.applicable_kinds = field
dotnet_naming_symbols.static_private_or_internal_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.static_private_or_internal_field.required_modifiers = static

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

dotnet_naming_symbols.namespace.applicable_kinds = namespace
dotnet_naming_symbols.namespace.applicable_accessibilities = *
dotnet_naming_symbols.namespace.required_modifiers = 

# 命名スタイル

# UCC
dotnet_naming_style.pascal_case.capitalization = pascal_case

# I + UCC
dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.capitalization = pascal_case

# _ + LCC
dotnet_naming_style.underscore_and_camel_case.required_prefix = _
dotnet_naming_style.underscore_and_camel_case.capitalization = camel_case

# s_ + LCC
dotnet_naming_style.s_and_underscore_and_camel_case.required_prefix = s_
dotnet_naming_style.s_and_underscore_and_camel_case.capitalization = camel_case

# _ + ALL UPPER
dotnet_naming_style.all_upper.word_separator = _
dotnet_naming_style.all_upper.capitalization = all_upper